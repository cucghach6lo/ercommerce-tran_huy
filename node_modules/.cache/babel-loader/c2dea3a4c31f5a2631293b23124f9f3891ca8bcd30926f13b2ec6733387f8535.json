{"ast":null,"code":"var _jsxFileName = \"C:\\\\iviettech\\\\ecomerce\\\\client\\\\src\\\\Components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = \"1\";\n  const role = [\"customer\", \"admin\", \"seller\"];\n  const getDataUser = async data => {\n    const response = await axios.get(\"http://localhost:3004/users\", {\n      params: {\n        nickname: data.nickname,\n        password: data.password,\n        role: \"customer\"\n      }\n    });\n    if (response.status === 200) {\n      // Handle success\n    }\n  };\n  const onFinish = values => {\n    console.log(\"test\", values);\n    const data = {\n      nickname: values.username,\n      password: values.password\n    };\n    getDataUser(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(Login, \"9ycoCFN+httAYNGBOuHR1G2rRv8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Checkbox","Form","Input","Link","axios","jsxDEV","_jsxDEV","Login","_s","nickname","setNickname","password","setPassword","isLogin","role","getDataUser","data","response","get","params","status","onFinish","values","console","log","username","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/iviettech/ecomerce/client/src/Components/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Checkbox, Form, Input } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const isLogin = \"1\";\r\n  const role = [\"customer\", \"admin\", \"seller\"];\r\n\r\n  const getDataUser = async (data) => {\r\n    const response = await axios.get(\"http://localhost:3004/users\", {\r\n      params: {\r\n        nickname: data.nickname,\r\n        password: data.password,\r\n        role: \"customer\",\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      // Handle success\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"test\", values);\r\n    const data = {\r\n      nickname: values.username,\r\n      password: values.password,\r\n    };\r\n    getDataUser(data);\r\n  };\r\n\r\n  return <div>{/* ... (rest of your component remains the same) */}</div>;\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AACpD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,OAAO,GAAG,GAAG;EACnB,MAAMC,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;EAE5C,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,EAAE;MAC9DC,MAAM,EAAE;QACNV,QAAQ,EAAEO,IAAI,CAACP,QAAQ;QACvBE,QAAQ,EAAEK,IAAI,CAACL,QAAQ;QACvBG,IAAI,EAAE;MACR;IACF,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MAC3B;IAAA;EAEJ,CAAC;EAED,MAAMC,QAAQ,GAAIC,MAAM,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,MAAM,CAAC;IAC3B,MAAMN,IAAI,GAAG;MACXP,QAAQ,EAAEa,MAAM,CAACG,QAAQ;MACzBd,QAAQ,EAAEW,MAAM,CAACX;IACnB,CAAC;IACDI,WAAW,CAACC,IAAI,CAAC;EACnB,CAAC;EAED,oBAAOV,OAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA+D,CAAC;AACzE,CAAC;AAACrB,EAAA,CA/BID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}